using System;
using System.Collections.Generic;
using System.Linq;

public class IntercalarArreglos
{
    private const int LIMITE_INFERIOR = 1;
    private const int LIMITE_SUPERIOR = 100;

    public static void Main(string[] args)
    {
        Console.WriteLine("--- Intercalar Arreglos ---");

        int n = ObtenerTamanoArreglo();

        int[] arr1 = ObtenerArreglo("Primer Arreglo (arr1)", n);
        int[] arr2 = ObtenerArreglo("Segundo Arreglo (arr2)", n);

        int totalElementos = n * 2;
        int[] resultado = new int[totalElementos];
        List<string> origenValores = new List<string>();

        for (int i = 0; i < n; i++)
        {
            resultado[2 * i] = arr1[i];
            origenValores.Add("arr1");

            resultado[2 * i + 1] = arr2[i];
            origenValores.Add("arr2");
        }

        Console.WriteLine("\n--- Arreglos de Entrada ---");
        Console.WriteLine($"arr1: [{string.Join(", ", arr1)}]");
        Console.WriteLine($"arr2: [{string.Join(", ", arr2)}]");
        
        Console.WriteLine("\n--- Arreglo Intercalado ---");
        Console.WriteLine($"Resultado: [{string.Join(", ", resultado)}]");

        Console.WriteLine("\n--- Origen de cada valor ---");
        for (int i = 0; i < totalElementos; i++)
        {
            Console.WriteLine($"{resultado[i]} ({origenValores[i]})");
        }
    }

    public static int ObtenerTamanoArreglo()
    {
        int n;
        string input;

        while (true)
        {
            Console.Write("Ingresa el tamano 'n' de los arreglos (maximo 10): ");
            input = Console.ReadLine();

            if (int.TryParse(input, out n) && n > 0 && n <= 10)
            {
                return n;
            }
            Console.WriteLine("Entrada invalida. Por favor, ingresa un numero entero positivo (1-10).");
        }
    }

    public static int[] ObtenerArreglo(string nombre, int n)
    {
        int[] arr = new int[n];
        Console.WriteLine($"\nIngreso de numeros para el {nombre} ({n} elementos). Rango [{LIMITE_INFERIOR}, {LIMITE_SUPERIOR}]:");

        for (int i = 0; i < n; i++)
        {
            while (true)
            {
                Console.Write($"Elemento {i + 1}: ");
                string input = Console.ReadLine();

                if (ValidarNumero(input, out int numeroValido))
                {
                    arr[i] = numeroValido;
                    break;
                }
            }
        }
        return arr;
    }

    public static bool ValidarNumero(string input, out int numero)
    {
        numero = 0;

        if (!int.TryParse(input, out numero))
        {
            Console.WriteLine("Error: Debe ser un numero entero valido.");
            return false;
        }

        if (numero < LIMITE_INFERIOR || numero > LIMITE_SUPERIOR)
        {
            Console.WriteLine($"Error: El numero debe estar en el rango [{LIMITE_INFERIOR}, {LIMITE_SUPERIOR}].");
            return false;
        }

        return true;
    }
}
